/* 
 * DotAAS Part 2 | HTTP/REST | Entire Interface Collection
 *
 * The entire interface collection as part of Details of the Asset Administration Shell Part 2
 *
 * OpenAPI spec version: V1.0RC01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing AssetAdministrationShellBasicDiscoveryApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AssetAdministrationShellBasicDiscoveryApiTests
    {
        private AssetAdministrationShellBasicDiscoveryApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AssetAdministrationShellBasicDiscoveryApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AssetAdministrationShellBasicDiscoveryApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AssetAdministrationShellBasicDiscoveryApi
            //Assert.IsInstanceOfType(typeof(AssetAdministrationShellBasicDiscoveryApi), instance, "instance is a AssetAdministrationShellBasicDiscoveryApi");
        }

        /// <summary>
        /// Test DeleteAllAssetLinksById
        /// </summary>
        [Test]
        public void DeleteAllAssetLinksByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string aasIdentifier = null;
            //instance.DeleteAllAssetLinksById(aasIdentifier);
            
        }
        /// <summary>
        /// Test GetAllAssetAdministrationShellIdsByAssetLink
        /// </summary>
        [Test]
        public void GetAllAssetAdministrationShellIdsByAssetLinkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<IdentifierKeyValuePair> assetIds = null;
            //var response = instance.GetAllAssetAdministrationShellIdsByAssetLink(assetIds);
            //Assert.IsInstanceOf<List<string>> (response, "response is List<string>");
        }
        /// <summary>
        /// Test GetAllAssetLinksById
        /// </summary>
        [Test]
        public void GetAllAssetLinksByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string aasIdentifier = null;
            //var response = instance.GetAllAssetLinksById(aasIdentifier);
            //Assert.IsInstanceOf<List<IdentifierKeyValuePair>> (response, "response is List<IdentifierKeyValuePair>");
        }
        /// <summary>
        /// Test PostAllAssetLinksById
        /// </summary>
        [Test]
        public void PostAllAssetLinksByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<IdentifierKeyValuePair> body = null;
            //string aasIdentifier = null;
            //var response = instance.PostAllAssetLinksById(body, aasIdentifier);
            //Assert.IsInstanceOf<List<IdentifierKeyValuePair>> (response, "response is List<IdentifierKeyValuePair>");
        }
    }

}
