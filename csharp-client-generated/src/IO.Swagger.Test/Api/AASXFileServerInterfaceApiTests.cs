/* 
 * DotAAS Part 2 | HTTP/REST | Entire Interface Collection
 *
 * The entire interface collection as part of Details of the Asset Administration Shell Part 2
 *
 * OpenAPI spec version: V1.0RC01
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing AASXFileServerInterfaceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AASXFileServerInterfaceApiTests
    {
        private AASXFileServerInterfaceApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AASXFileServerInterfaceApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AASXFileServerInterfaceApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AASXFileServerInterfaceApi
            //Assert.IsInstanceOfType(typeof(AASXFileServerInterfaceApi), instance, "instance is a AASXFileServerInterfaceApi");
        }

        /// <summary>
        /// Test DeleteAASXByPackageId
        /// </summary>
        [Test]
        public void DeleteAASXByPackageIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string packageId = null;
            //instance.DeleteAASXByPackageId(packageId);
            
        }
        /// <summary>
        /// Test GetAASXByPackageId
        /// </summary>
        [Test]
        public void GetAASXByPackageIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string packageId = null;
            //var response = instance.GetAASXByPackageId(packageId);
            //Assert.IsInstanceOf<byte[]> (response, "response is byte[]");
        }
        /// <summary>
        /// Test GetAllAASXPackageIds
        /// </summary>
        [Test]
        public void GetAllAASXPackageIdsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string aasId = null;
            //var response = instance.GetAllAASXPackageIds(aasId);
            //Assert.IsInstanceOf<List<PackageDescription>> (response, "response is List<PackageDescription>");
        }
        /// <summary>
        /// Test PostAASXPackage
        /// </summary>
        [Test]
        public void PostAASXPackageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> aasIds = null;
            //byte[] file = null;
            //string fileName = null;
            //var response = instance.PostAASXPackage(aasIds, file, fileName);
            //Assert.IsInstanceOf<PackageDescription> (response, "response is PackageDescription");
        }
        /// <summary>
        /// Test PutAASXByPackageId
        /// </summary>
        [Test]
        public void PutAASXByPackageIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> aasIds = null;
            //byte[] file = null;
            //string fileName = null;
            //string packageId = null;
            //instance.PutAASXByPackageId(aasIds, file, fileName, packageId);
            
        }
    }

}
